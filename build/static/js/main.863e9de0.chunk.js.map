{"version":3,"sources":["components/FirstStep.js","components/Progress.js","components/Header.js","components/Login.js","utils/constants.js","components/SecondStep.js","components/ThirdStep.js","router/AppRouter.js","index.js"],"names":["FirstStep","props","user","useForm","defaultValues","first_name","last_name","register","handleSubmit","errors","Form","className","onSubmit","data","updateUser","history","push","div","initial","x","animate","transition","stiffness","Group","controlId","Label","Control","type","name","placeholder","autoComplete","ref","required","pattern","value","message","Button","variant","withRouter","pathname","location","isFirstStep","isSecondStep","isThirdStep","isLoginPage","Fragment","to","Header","Login","useState","successMessage","setSuccessMessage","errorMessage","setErrorMessage","userDetails","setUserDetails","console","log","axios","post","response","user_email","country","state","city","minLength","user_password","SecondStep","ThirdStep","countries","setCountries","states","setStates","cities","setCities","isLoading","setIsLoading","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","useEffect","a","csc","getAllCountries","result","allCountries","map","isoCode","firstCountry","getCountries","getStatesOfCountry","allStates","firstState","getStates","getCitiesOfState","allCities","firstCity","getCities","event","preventDefault","updatedData","find","Swal","fire","then","isConfirmed","isDismissed","resetUser","icon","title","text","as","onChange","target","length","AppRouter","setUser","prevUser","render","path","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.863e9de0.chunk.js","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport { motion } from 'framer-motion';\n\nconst FirstStep = (props) => {\n  const { user } = props;\n  const { register, handleSubmit, errors } = useForm({\n    defaultValues: {\n      first_name: user.first_name,\n      last_name: user.last_name\n    }\n  });\n\n  const onSubmit = (data) => {\n    props.updateUser(data);\n    props.history.push('/second');\n  };\n\n  return (\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\n      <motion.div\n        className=\"col-md-6 offset-md-3\"\n        initial={{ x: '-100vw' }}\n        animate={{ x: 0 }}\n        transition={{ stiffness: 150 }}\n      >\n        <Form.Group controlId=\"first_name\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"first_name\"\n            placeholder=\"Enter your first name\"\n            autoComplete=\"off\"\n            ref={register({\n              required: 'First name is required.',\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                message: 'First name should contain only characters.'\n              }\n            })}\n            className={`${errors.first_name ? 'input-error' : ''}`}\n          />\n          {errors.first_name && (\n            <p className=\"errorMsg\">{errors.first_name.message}</p>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId=\"last_name\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"last_name\"\n            placeholder=\"Enter your last name\"\n            autoComplete=\"off\"\n            ref={register({\n              required: 'Last name is required.',\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                message: 'Last name should contain only characters.'\n              }\n            })}\n            className={`${errors.last_name ? 'input-error' : ''}`}\n          />\n          {errors.last_name && (\n            <p className=\"errorMsg\">{errors.last_name.message}</p>\n          )}\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Next\n        </Button>\n      </motion.div>\n    </Form>\n  );\n};\n\nexport default FirstStep;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Progress = ({ location: { pathname } }) => {\n  const isFirstStep = pathname === '/';\n  const isSecondStep = pathname === '/second';\n  const isThirdStep = pathname === '/third';\n  const isLoginPage = pathname === '/login';\n\n  return (\n    <React.Fragment>\n      {!isLoginPage ? (\n        <div className=\"steps\">\n          <div className={`${isFirstStep ? 'step active' : 'step'}`}>\n            <div>1</div>\n            <div>\n              {isSecondStep || isThirdStep ? (\n                <Link to=\"/\">Step 1</Link>\n              ) : (\n                'Step 1'\n              )}\n            </div>\n          </div>\n          <div className={`${isSecondStep ? 'step active' : 'step'}`}>\n            <div>2</div>\n            <div>\n              {isThirdStep ? <Link to=\"/second\">Step 2</Link> : 'Step 2'}\n            </div>\n          </div>\n          <div className={`${pathname === '/third' ? 'step active' : 'step'}`}>\n            <div>3</div>\n            <div>Step 3</div>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Progress);\n","import React from 'react';\nimport Progress from './Progress';\n\nconst Header = () => (\n  <div>\n    <h1>Multi Step Registration</h1>\n    <Progress />\n  </div>\n);\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { BASE_API_URL } from '../utils/constants';\n\nconst Login = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userDetails, setUserDetails] = useState('');\n\n  const onSubmit = async (data) => {\n    console.log(data);\n\n    try {\n      const response = await axios.post(`${BASE_API_URL}/login`, data);\n      setSuccessMessage('User with the provided credentials found.');\n      setErrorMessage('');\n      setUserDetails(response.data);\n    } catch (error) {\n      console.log(error);\n      if (error.response) {\n        console.log('error', error.response.data);\n        setErrorMessage(error.response.data);\n      }\n    }\n  };\n\n  return (\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"col-md-6 offset-md-3\">\n        {errorMessage ? (\n          <p className=\"errorMsg login-error\">{errorMessage}</p>\n        ) : (\n          <div>\n            <p className=\"successMsg\">{successMessage}</p>\n\n            {userDetails && (\n              <div className=\"user-details\">\n                <p>Following are the user details:</p>\n                <div>First name: {userDetails.first_name}</div>\n                <div>Last name: {userDetails.last_name}</div>\n                <div>Email: {userDetails.user_email}</div>\n                <div>Country: {userDetails.country}</div>\n                <div>State: {userDetails.state}</div>\n                <div>City: {userDetails.city}</div>\n              </div>\n            )}\n          </div>\n        )}\n        <Form.Group controlId=\"first_name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"user_email\"\n            placeholder=\"Enter your email address\"\n            ref={register({\n              required: 'Email is required.',\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: 'Email is not valid.'\n              }\n            })}\n            className={`${errors.user_email ? 'input-error' : ''}`}\n          />\n          {errors.user_email && (\n            <p className=\"errorMsg\">{errors.user_email.message}</p>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"user_password\"\n            placeholder=\"Choose a password\"\n            ref={register({\n              required: 'Password is required.',\n              minLength: {\n                value: 6,\n                message: 'Password should have at-least 6 characters.'\n              }\n            })}\n            className={`${errors.user_password ? 'input-error' : ''}`}\n          />\n          {errors.user_password && (\n            <p className=\"errorMsg\">{errors.user_password.message}</p>\n          )}\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Check Login\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default Login;\n","export const BASE_API_URL = '';\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport { motion } from 'framer-motion';\n\nconst SecondStep = (props) => {\n  const { user } = props;\n  const { register, handleSubmit, errors } = useForm({\n    defaultValues: {\n      user_email: user.user_email,\n      user_password: user.user_password\n    }\n  });\n\n  const onSubmit = (data) => {\n    props.updateUser(data);\n    props.history.push('/third');\n  };\n\n  return (\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\n      <motion.div\n        className=\"col-md-6 offset-md-3\"\n        initial={{ x: '-100vw' }}\n        animate={{ x: 0 }}\n        transition={{ stiffness: 150 }}\n      >\n        <Form.Group controlId=\"first_name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"user_email\"\n            placeholder=\"Enter your email address\"\n            autoComplete=\"off\"\n            ref={register({\n              required: 'Email is required.',\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: 'Email is not valid.'\n              }\n            })}\n            className={`${errors.user_email ? 'input-error' : ''}`}\n          />\n          {errors.user_email && (\n            <p className=\"errorMsg\">{errors.user_email.message}</p>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"user_password\"\n            placeholder=\"Choose a password\"\n            autoComplete=\"off\"\n            ref={register({\n              required: 'Password is required.',\n              minLength: {\n                value: 6,\n                message: 'Password should have at-least 6 characters.'\n              }\n            })}\n            className={`${errors.user_password ? 'input-error' : ''}`}\n          />\n          {errors.user_password && (\n            <p className=\"errorMsg\">{errors.user_password.message}</p>\n          )}\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Next\n        </Button>\n      </motion.div>\n    </Form>\n  );\n};\n\nexport default SecondStep;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport csc from 'country-state-city';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport Swal from 'sweetalert2';\nimport { BASE_API_URL } from '../utils/constants';\n\nconst ThirdStep = (props) => {\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n\n  useEffect(() => {\n    const getCountries = async () => {\n      try {\n        setIsLoading(true);\n        const result = await csc.getAllCountries();\n        let allCountries = [];\n        allCountries = result?.map(({ isoCode, name }) => ({\n          isoCode,\n          name\n        }));\n        const [{ isoCode: firstCountry } = {}] = allCountries;\n        setCountries(allCountries);\n        setSelectedCountry(firstCountry);\n        setIsLoading(false);\n      } catch (error) {\n        setCountries([]);\n        setIsLoading(false);\n      }\n    };\n\n    getCountries();\n  }, []);\n\n  useEffect(() => {\n    const getStates = async () => {\n      try {\n        const result = await csc.getStatesOfCountry(selectedCountry);\n        let allStates = [];\n        allStates = result?.map(({ isoCode, name }) => ({\n          isoCode,\n          name\n        }));\n        const [{ isoCode: firstState = '' } = {}] = allStates;\n        setCities([]);\n        setSelectedCity('');\n        setStates(allStates);\n        setSelectedState(firstState);\n      } catch (error) {\n        setStates([]);\n        setCities([]);\n        setSelectedCity('');\n      }\n    };\n\n    getStates();\n  }, [selectedCountry]);\n\n  useEffect(() => {\n    const getCities = async () => {\n      try {\n        const result = await csc.getCitiesOfState(\n          selectedCountry,\n          selectedState\n        );\n        let allCities = [];\n        allCities = result?.map(({ name }) => ({\n          name\n        }));\n        const [{ name: firstCity = '' } = {}] = allCities;\n        setCities(allCities);\n        setSelectedCity(firstCity);\n      } catch (error) {\n        setCities([]);\n      }\n    };\n\n    getCities();\n  }, [selectedState]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { user } = props;\n      const updatedData = {\n        country: countries.find(\n          (country) => country.isoCode === selectedCountry\n        )?.name,\n        state:\n          states.find((state) => state.isoCode === selectedState)?.name || '', // or condition added because selectedState might come as undefined\n        city: selectedCity\n      };\n\n      await axios.post(`${BASE_API_URL}/register`, {\n        ...user,\n        ...updatedData\n      });\n      Swal.fire('Awesome!', \"You're successfully registered!\", 'success').then(\n        (result) => {\n          if (result.isConfirmed || result.isDismissed) {\n            props.resetUser();\n            props.history.push('/');\n          }\n        }\n      );\n    } catch (error) {\n      if (error.response) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: error.response.data\n        });\n        console.log('error', error.response.data);\n      }\n    }\n  };\n\n  return (\n    <Form className=\"input-form\" onSubmit={handleSubmit}>\n      <motion.div\n        className=\"col-md-6 offset-md-3\"\n        initial={{ x: '-100vw' }}\n        animate={{ x: 0 }}\n        transition={{ stiffness: 150 }}\n      >\n        <Form.Group controlId=\"country\">\n          {isLoading && (\n            <p className=\"loading\">Loading countries. Please wait...</p>\n          )}\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"country\"\n            value={selectedCountry}\n            onChange={(event) => setSelectedCountry(event.target.value)}\n          >\n            {countries.map(({ isoCode, name }) => (\n              <option value={isoCode} key={isoCode}>\n                {name}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"state\">\n          <Form.Label>State</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"state\"\n            value={selectedState}\n            onChange={(event) => setSelectedState(event.target.value)}\n          >\n            {states.length > 0 ? (\n              states.map(({ isoCode, name }) => (\n                <option value={isoCode} key={isoCode}>\n                  {name}\n                </option>\n              ))\n            ) : (\n              <option value=\"\" key=\"\">\n                No state found\n              </option>\n            )}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"city\"\n            value={selectedCity}\n            onChange={(event) => setSelectedCity(event.target.value)}\n          >\n            {cities.length > 0 ? (\n              cities.map(({ name }) => (\n                <option value={name} key={name}>\n                  {name}\n                </option>\n              ))\n            ) : (\n              <option value=\"\">No cities found</option>\n            )}\n          </Form.Control>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Register\n        </Button>\n      </motion.div>\n    </Form>\n  );\n};\n\nexport default ThirdStep;\n","import React, { useState } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport FirstStep from '../components/FirstStep';\nimport Header from '../components/Header';\nimport Login from '../components/Login';\nimport SecondStep from '../components/SecondStep';\nimport ThirdStep from '../components/ThirdStep';\n\nconst AppRouter = () => {\n  const [user, setUser] = useState({});\n\n  const updateUser = (data) => {\n    setUser((prevUser) => ({ ...prevUser, ...data }));\n  };\n\n  const resetUser = () => {\n    setUser({});\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Header />\n        <Switch>\n          <Route\n            render={(props) => (\n              <FirstStep {...props} user={user} updateUser={updateUser} />\n            )}\n            path=\"/\"\n            exact={true}\n          />\n          <Route\n            render={(props) => (\n              <SecondStep {...props} user={user} updateUser={updateUser} />\n            )}\n            path=\"/second\"\n          />\n          <Route\n            render={(props) => (\n              <ThirdStep\n                {...props}\n                user={user}\n                updateUser={updateUser}\n                resetUser={resetUser}\n              />\n            )}\n            path=\"/third\"\n          />\n          <Route component={Login} path=\"/login\" />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.scss';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n"],"sourceRoot":""}